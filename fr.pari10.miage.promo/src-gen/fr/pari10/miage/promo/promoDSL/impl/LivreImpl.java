/**
 * generated by Xtext 2.10.0
 */
package fr.pari10.miage.promo.promoDSL.impl;

import fr.pari10.miage.promo.promoDSL.Chapitre;
import fr.pari10.miage.promo.promoDSL.Livre;
import fr.pari10.miage.promo.promoDSL.PromoDSLPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Livre</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.LivreImpl#getNomDuLivre <em>Nom Du Livre</em>}</li>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.LivreImpl#getNomDuLauteur <em>Nom Du Lauteur</em>}</li>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.LivreImpl#getChapitre <em>Chapitre</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LivreImpl extends MinimalEObjectImpl.Container implements Livre
{
  /**
   * The default value of the '{@link #getNomDuLivre() <em>Nom Du Livre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomDuLivre()
   * @generated
   * @ordered
   */
  protected static final String NOM_DU_LIVRE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNomDuLivre() <em>Nom Du Livre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomDuLivre()
   * @generated
   * @ordered
   */
  protected String nomDuLivre = NOM_DU_LIVRE_EDEFAULT;

  /**
   * The default value of the '{@link #getNomDuLauteur() <em>Nom Du Lauteur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomDuLauteur()
   * @generated
   * @ordered
   */
  protected static final String NOM_DU_LAUTEUR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNomDuLauteur() <em>Nom Du Lauteur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomDuLauteur()
   * @generated
   * @ordered
   */
  protected String nomDuLauteur = NOM_DU_LAUTEUR_EDEFAULT;

  /**
   * The cached value of the '{@link #getChapitre() <em>Chapitre</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChapitre()
   * @generated
   * @ordered
   */
  protected EList<Chapitre> chapitre;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LivreImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PromoDSLPackage.Literals.LIVRE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNomDuLivre()
  {
    return nomDuLivre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNomDuLivre(String newNomDuLivre)
  {
    String oldNomDuLivre = nomDuLivre;
    nomDuLivre = newNomDuLivre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PromoDSLPackage.LIVRE__NOM_DU_LIVRE, oldNomDuLivre, nomDuLivre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNomDuLauteur()
  {
    return nomDuLauteur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNomDuLauteur(String newNomDuLauteur)
  {
    String oldNomDuLauteur = nomDuLauteur;
    nomDuLauteur = newNomDuLauteur;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PromoDSLPackage.LIVRE__NOM_DU_LAUTEUR, oldNomDuLauteur, nomDuLauteur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Chapitre> getChapitre()
  {
    if (chapitre == null)
    {
      chapitre = new EObjectContainmentEList<Chapitre>(Chapitre.class, this, PromoDSLPackage.LIVRE__CHAPITRE);
    }
    return chapitre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PromoDSLPackage.LIVRE__CHAPITRE:
        return ((InternalEList<?>)getChapitre()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PromoDSLPackage.LIVRE__NOM_DU_LIVRE:
        return getNomDuLivre();
      case PromoDSLPackage.LIVRE__NOM_DU_LAUTEUR:
        return getNomDuLauteur();
      case PromoDSLPackage.LIVRE__CHAPITRE:
        return getChapitre();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PromoDSLPackage.LIVRE__NOM_DU_LIVRE:
        setNomDuLivre((String)newValue);
        return;
      case PromoDSLPackage.LIVRE__NOM_DU_LAUTEUR:
        setNomDuLauteur((String)newValue);
        return;
      case PromoDSLPackage.LIVRE__CHAPITRE:
        getChapitre().clear();
        getChapitre().addAll((Collection<? extends Chapitre>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PromoDSLPackage.LIVRE__NOM_DU_LIVRE:
        setNomDuLivre(NOM_DU_LIVRE_EDEFAULT);
        return;
      case PromoDSLPackage.LIVRE__NOM_DU_LAUTEUR:
        setNomDuLauteur(NOM_DU_LAUTEUR_EDEFAULT);
        return;
      case PromoDSLPackage.LIVRE__CHAPITRE:
        getChapitre().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PromoDSLPackage.LIVRE__NOM_DU_LIVRE:
        return NOM_DU_LIVRE_EDEFAULT == null ? nomDuLivre != null : !NOM_DU_LIVRE_EDEFAULT.equals(nomDuLivre);
      case PromoDSLPackage.LIVRE__NOM_DU_LAUTEUR:
        return NOM_DU_LAUTEUR_EDEFAULT == null ? nomDuLauteur != null : !NOM_DU_LAUTEUR_EDEFAULT.equals(nomDuLauteur);
      case PromoDSLPackage.LIVRE__CHAPITRE:
        return chapitre != null && !chapitre.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (nomDuLivre: ");
    result.append(nomDuLivre);
    result.append(", nomDuLauteur: ");
    result.append(nomDuLauteur);
    result.append(')');
    return result.toString();
  }

} //LivreImpl
