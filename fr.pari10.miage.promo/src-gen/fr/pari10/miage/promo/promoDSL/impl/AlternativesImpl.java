/**
 * generated by Xtext 2.10.0
 */
package fr.pari10.miage.promo.promoDSL.impl;

import fr.pari10.miage.promo.promoDSL.Alternatives;
import fr.pari10.miage.promo.promoDSL.PromoDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Alternatives</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.AlternativesImpl#getAltNum <em>Alt Num</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AlternativesImpl extends MinimalEObjectImpl.Container implements Alternatives
{
  /**
   * The default value of the '{@link #getAltNum() <em>Alt Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAltNum()
   * @generated
   * @ordered
   */
  protected static final String ALT_NUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAltNum() <em>Alt Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAltNum()
   * @generated
   * @ordered
   */
  protected String altNum = ALT_NUM_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AlternativesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PromoDSLPackage.Literals.ALTERNATIVES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAltNum()
  {
    return altNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAltNum(String newAltNum)
  {
    String oldAltNum = altNum;
    altNum = newAltNum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PromoDSLPackage.ALTERNATIVES__ALT_NUM, oldAltNum, altNum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PromoDSLPackage.ALTERNATIVES__ALT_NUM:
        return getAltNum();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PromoDSLPackage.ALTERNATIVES__ALT_NUM:
        setAltNum((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PromoDSLPackage.ALTERNATIVES__ALT_NUM:
        setAltNum(ALT_NUM_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PromoDSLPackage.ALTERNATIVES__ALT_NUM:
        return ALT_NUM_EDEFAULT == null ? altNum != null : !ALT_NUM_EDEFAULT.equals(altNum);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (altNum: ");
    result.append(altNum);
    result.append(')');
    return result.toString();
  }

} //AlternativesImpl
