/**
 * generated by Xtext 2.10.0
 */
package fr.pari10.miage.promo.promoDSL.impl;

import fr.pari10.miage.promo.promoDSL.Alternatives;
import fr.pari10.miage.promo.promoDSL.Ingredient;
import fr.pari10.miage.promo.promoDSL.Instruction;
import fr.pari10.miage.promo.promoDSL.PromoDSLPackage;
import fr.pari10.miage.promo.promoDSL.Recette;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Recette</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.RecetteImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.RecetteImpl#getNumPhoto <em>Num Photo</em>}</li>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.RecetteImpl#getIngredients <em>Ingredients</em>}</li>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.RecetteImpl#getInstructions <em>Instructions</em>}</li>
 *   <li>{@link fr.pari10.miage.promo.promoDSL.impl.RecetteImpl#getAlternatives <em>Alternatives</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RecetteImpl extends MinimalEObjectImpl.Container implements Recette
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getNumPhoto() <em>Num Photo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumPhoto()
   * @generated
   * @ordered
   */
  protected static final String NUM_PHOTO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNumPhoto() <em>Num Photo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumPhoto()
   * @generated
   * @ordered
   */
  protected String numPhoto = NUM_PHOTO_EDEFAULT;

  /**
   * The cached value of the '{@link #getIngredients() <em>Ingredients</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIngredients()
   * @generated
   * @ordered
   */
  protected EList<Ingredient> ingredients;

  /**
   * The cached value of the '{@link #getInstructions() <em>Instructions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstructions()
   * @generated
   * @ordered
   */
  protected EList<Instruction> instructions;

  /**
   * The cached value of the '{@link #getAlternatives() <em>Alternatives</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlternatives()
   * @generated
   * @ordered
   */
  protected EList<Alternatives> alternatives;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RecetteImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PromoDSLPackage.Literals.RECETTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PromoDSLPackage.RECETTE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNumPhoto()
  {
    return numPhoto;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumPhoto(String newNumPhoto)
  {
    String oldNumPhoto = numPhoto;
    numPhoto = newNumPhoto;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PromoDSLPackage.RECETTE__NUM_PHOTO, oldNumPhoto, numPhoto));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Ingredient> getIngredients()
  {
    if (ingredients == null)
    {
      ingredients = new EObjectContainmentEList<Ingredient>(Ingredient.class, this, PromoDSLPackage.RECETTE__INGREDIENTS);
    }
    return ingredients;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Instruction> getInstructions()
  {
    if (instructions == null)
    {
      instructions = new EObjectContainmentEList<Instruction>(Instruction.class, this, PromoDSLPackage.RECETTE__INSTRUCTIONS);
    }
    return instructions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Alternatives> getAlternatives()
  {
    if (alternatives == null)
    {
      alternatives = new EObjectContainmentEList<Alternatives>(Alternatives.class, this, PromoDSLPackage.RECETTE__ALTERNATIVES);
    }
    return alternatives;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PromoDSLPackage.RECETTE__INGREDIENTS:
        return ((InternalEList<?>)getIngredients()).basicRemove(otherEnd, msgs);
      case PromoDSLPackage.RECETTE__INSTRUCTIONS:
        return ((InternalEList<?>)getInstructions()).basicRemove(otherEnd, msgs);
      case PromoDSLPackage.RECETTE__ALTERNATIVES:
        return ((InternalEList<?>)getAlternatives()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PromoDSLPackage.RECETTE__NAME:
        return getName();
      case PromoDSLPackage.RECETTE__NUM_PHOTO:
        return getNumPhoto();
      case PromoDSLPackage.RECETTE__INGREDIENTS:
        return getIngredients();
      case PromoDSLPackage.RECETTE__INSTRUCTIONS:
        return getInstructions();
      case PromoDSLPackage.RECETTE__ALTERNATIVES:
        return getAlternatives();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PromoDSLPackage.RECETTE__NAME:
        setName((String)newValue);
        return;
      case PromoDSLPackage.RECETTE__NUM_PHOTO:
        setNumPhoto((String)newValue);
        return;
      case PromoDSLPackage.RECETTE__INGREDIENTS:
        getIngredients().clear();
        getIngredients().addAll((Collection<? extends Ingredient>)newValue);
        return;
      case PromoDSLPackage.RECETTE__INSTRUCTIONS:
        getInstructions().clear();
        getInstructions().addAll((Collection<? extends Instruction>)newValue);
        return;
      case PromoDSLPackage.RECETTE__ALTERNATIVES:
        getAlternatives().clear();
        getAlternatives().addAll((Collection<? extends Alternatives>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PromoDSLPackage.RECETTE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PromoDSLPackage.RECETTE__NUM_PHOTO:
        setNumPhoto(NUM_PHOTO_EDEFAULT);
        return;
      case PromoDSLPackage.RECETTE__INGREDIENTS:
        getIngredients().clear();
        return;
      case PromoDSLPackage.RECETTE__INSTRUCTIONS:
        getInstructions().clear();
        return;
      case PromoDSLPackage.RECETTE__ALTERNATIVES:
        getAlternatives().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PromoDSLPackage.RECETTE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PromoDSLPackage.RECETTE__NUM_PHOTO:
        return NUM_PHOTO_EDEFAULT == null ? numPhoto != null : !NUM_PHOTO_EDEFAULT.equals(numPhoto);
      case PromoDSLPackage.RECETTE__INGREDIENTS:
        return ingredients != null && !ingredients.isEmpty();
      case PromoDSLPackage.RECETTE__INSTRUCTIONS:
        return instructions != null && !instructions.isEmpty();
      case PromoDSLPackage.RECETTE__ALTERNATIVES:
        return alternatives != null && !alternatives.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", NumPhoto: ");
    result.append(numPhoto);
    result.append(')');
    return result.toString();
  }

} //RecetteImpl
